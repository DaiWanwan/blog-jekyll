$(function(){QUnit.module("tabs plugin");QUnit.test("should be defined on jquery object",function(a){a.expect(1);a.ok($(document.body).tab,"tabs method is defined")});QUnit.module("tabs",{beforeEach:function(){$.fn.bootstrapTab=$.fn.tab.noConflict()},afterEach:function(){$.fn.tab=$.fn.bootstrapTab;delete $.fn.bootstrapTab}});QUnit.test("should provide no conflict",function(a){a.expect(1);a.strictEqual($.fn.tab,undefined,"tab was set back to undefined (org value)")});QUnit.test("should return jquery collection containing the element",function(a){a.expect(2);var b=$("<div/>");var c=b.bootstrapTab();a.ok(c instanceof $,"returns jquery collection");a.strictEqual(c[0],b[0],"collection contains element")});QUnit.test("should activate element by tab id",function(a){a.expect(2);var b='<ul class="tabs"><li><a href="#home">Home</a></li><li><a href="#profile">Profile</a></li></ul>';$('<ul><li id="home"/><li id="profile"/></ul>').appendTo("#qunit-fixture");$(b).find("li:last a").bootstrapTab("show");a.strictEqual($("#qunit-fixture").find(".active").attr("id"),"profile");$(b).find("li:first a").bootstrapTab("show");a.strictEqual($("#qunit-fixture").find(".active").attr("id"),"home")});QUnit.test("should activate element by tab id",function(a){a.expect(2);var b='<ul class="pills"><li><a href="#home">Home</a></li><li><a href="#profile">Profile</a></li></ul>';$('<ul><li id="home"/><li id="profile"/></ul>').appendTo("#qunit-fixture");$(b).find("li:last a").bootstrapTab("show");a.strictEqual($("#qunit-fixture").find(".active").attr("id"),"profile");$(b).find("li:first a").bootstrapTab("show");a.strictEqual($("#qunit-fixture").find(".active").attr("id"),"home")});QUnit.test("should not fire shown when show is prevented",function(b){b.expect(1);var a=b.async();$('<div class="tab"/>').on("show.bs.tab",function(c){c.preventDefault();b.ok(true,"show event fired");a()}).on("shown.bs.tab",function(){b.ok(false,"shown event fired")}).bootstrapTab("show")});QUnit.test("show and shown events should reference correct relatedTarget",function(b){b.expect(2);var a=b.async();var c='<ul class="drop"><li class="dropdown"><a data-toggle="dropdown" href="#">1</a><ul class="dropdown-menu"><li><a href="#1-1" data-toggle="tab">1-1</a></li><li><a href="#1-2" data-toggle="tab">1-2</a></li></ul></li></ul>';$(c).find("ul > li:first a").bootstrapTab("show").end().find("ul > li:last a").on("show.bs.tab",function(d){b.strictEqual(d.relatedTarget.hash,"#1-1","references correct element as relatedTarget")}).on("shown.bs.tab",function(d){b.strictEqual(d.relatedTarget.hash,"#1-1","references correct element as relatedTarget");a()}).bootstrapTab("show")});QUnit.test("should fire hide and hidden events",function(b){b.expect(2);var a=b.async();var c='<ul class="tabs"><li><a href="#home">Home</a></li><li><a href="#profile">Profile</a></li></ul>';$(c).find("li:first a").on("hide.bs.tab",function(){b.ok(true,"hide event fired")}).bootstrapTab("show").end().find("li:last a").bootstrapTab("show");$(c).find("li:first a").on("hidden.bs.tab",function(){b.ok(true,"hidden event fired");a()}).bootstrapTab("show").end().find("li:last a").bootstrapTab("show")});QUnit.test("should not fire hidden when hide is prevented",function(b){b.expect(1);var a=b.async();var c='<ul class="tabs"><li><a href="#home">Home</a></li><li><a href="#profile">Profile</a></li></ul>';$(c).find("li:first a").on("hide.bs.tab",function(d){d.preventDefault();b.ok(true,"hide event fired");a()}).on("hidden.bs.tab",function(){b.ok(false,"hidden event fired")}).bootstrapTab("show").end().find("li:last a").bootstrapTab("show")});QUnit.test("hide and hidden events contain correct relatedTarget",function(b){b.expect(2);var a=b.async();var c='<ul class="tabs"><li><a href="#home">Home</a></li><li><a href="#profile">Profile</a></li></ul>';$(c).find("li:first a").on("hide.bs.tab",function(d){b.strictEqual(d.relatedTarget.hash,"#profile","references correct element as relatedTarget")}).on("hidden.bs.tab",function(d){b.strictEqual(d.relatedTarget.hash,"#profile","references correct element as relatedTarget");a()}).bootstrapTab("show").end().find("li:last a").bootstrapTab("show")});QUnit.test("selected tab should have aria-expanded",function(b){b.expect(8);var c='<ul class="nav nav-tabs"><li class="active"><a href="#home" toggle="tab" aria-expanded="true">Home</a></li><li><a href="#profile" toggle="tab" aria-expanded="false">Profile</a></li></ul>';var a=$(c).appendTo("#qunit-fixture");a.find("li:first a").bootstrapTab("show");b.strictEqual(a.find(".active a").attr("aria-expanded"),"true","shown tab has aria-expanded = true");b.strictEqual(a.find("li:not(.active) a").attr("aria-expanded"),"false","hidden tab has aria-expanded = false");a.find("li:last a").trigger("click");b.strictEqual(a.find(".active a").attr("aria-expanded"),"true","after click, shown tab has aria-expanded = true");b.strictEqual(a.find("li:not(.active) a").attr("aria-expanded"),"false","after click, hidden tab has aria-expanded = false");a.find("li:first a").bootstrapTab("show");b.strictEqual(a.find(".active a").attr("aria-expanded"),"true","shown tab has aria-expanded = true");b.strictEqual(a.find("li:not(.active) a").attr("aria-expanded"),"false","hidden tab has aria-expanded = false");a.find("li:first a").trigger("click");b.strictEqual(a.find(".active a").attr("aria-expanded"),"true","after second show event, shown tab still has aria-expanded = true");b.strictEqual(a.find("li:not(.active) a").attr("aria-expanded"),"false","after second show event, hidden tab has aria-expanded = false")})});