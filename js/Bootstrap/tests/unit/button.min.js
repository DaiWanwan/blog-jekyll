$(function(){QUnit.module("button plugin");QUnit.test("should be defined on jquery object",function(a){a.expect(1);a.ok($(document.body).button,"button method is defined")});QUnit.module("button",{beforeEach:function(){$.fn.bootstrapButton=$.fn.button.noConflict()},afterEach:function(){$.fn.button=$.fn.bootstrapButton;delete $.fn.bootstrapButton}});QUnit.test("should provide no conflict",function(a){a.expect(1);a.strictEqual($.fn.button,undefined,"button was set back to undefined (org value)")});QUnit.test("should return jquery collection containing the element",function(a){a.expect(2);var b=$("<div/>");var c=b.bootstrapButton();a.ok(c instanceof $,"returns jquery collection");a.strictEqual(c[0],b[0],"collection contains element")});QUnit.test("should return set state to loading",function(b){b.expect(4);var c=$('<button class="btn" data-loading-text="fat">mdo</button>');b.strictEqual(c.html(),"mdo","btn text equals mdo");c.bootstrapButton("loading");var a=b.async();setTimeout(function(){b.strictEqual(c.html(),"fat","btn text equals fat");b.ok(c[0].hasAttribute("disabled"),"btn is disabled");b.ok(c.hasClass("disabled"),"btn has disabled class");a()},0)});QUnit.test("should return reset state",function(a){a.expect(7);var c=$('<button class="btn" data-loading-text="fat">mdo</button>');a.strictEqual(c.html(),"mdo","btn text equals mdo");c.bootstrapButton("loading");var b=a.async();setTimeout(function(){a.strictEqual(c.html(),"fat","btn text equals fat");a.ok(c[0].hasAttribute("disabled"),"btn is disabled");a.ok(c.hasClass("disabled"),"btn has disabled class");b();var d=a.async();c.bootstrapButton("reset");setTimeout(function(){a.strictEqual(c.html(),"mdo","btn text equals mdo");a.ok(!c[0].hasAttribute("disabled"),"btn is not disabled");a.ok(!c.hasClass("disabled"),"btn does not have disabled class");d()},0)},0)});QUnit.test("should work with an empty string as reset state",function(a){a.expect(7);var c=$('<button class="btn" data-loading-text="fat"/>');a.strictEqual(c.html(),"",'btn text equals ""');c.bootstrapButton("loading");var b=a.async();setTimeout(function(){a.strictEqual(c.html(),"fat","btn text equals fat");a.ok(c[0].hasAttribute("disabled"),"btn is disabled");a.ok(c.hasClass("disabled"),"btn has disabled class");b();var d=a.async();c.bootstrapButton("reset");setTimeout(function(){a.strictEqual(c.html(),"",'btn text equals ""');a.ok(!c[0].hasAttribute("disabled"),"btn is not disabled");a.ok(!c.hasClass("disabled"),"btn does not have disabled class");d()},0)},0)});QUnit.test("should toggle active",function(a){a.expect(2);var b=$('<button class="btn" data-toggle="button">mdo</button>');a.ok(!b.hasClass("active"),"btn does not have active class");b.bootstrapButton("toggle");a.ok(b.hasClass("active"),"btn has class active")});QUnit.test("should toggle active when btn children are clicked",function(a){a.expect(2);var b=$('<button class="btn" data-toggle="button">mdo</button>');var c=$("<i/>");b.append(c).appendTo("#qunit-fixture");a.ok(!b.hasClass("active"),"btn does not have active class");c.trigger("click");a.ok(b.hasClass("active"),"btn has class active")});QUnit.test("should toggle aria-pressed",function(a){a.expect(2);var b=$('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>');a.strictEqual(b.attr("aria-pressed"),"false","btn aria-pressed state is false");b.bootstrapButton("toggle");a.strictEqual(b.attr("aria-pressed"),"true","btn aria-pressed state is true")});QUnit.test("should toggle aria-pressed when btn children are clicked",function(a){a.expect(2);var b=$('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>');var c=$("<i/>");b.append(c).appendTo("#qunit-fixture");a.strictEqual(b.attr("aria-pressed"),"false","btn aria-pressed state is false");c.trigger("click");a.strictEqual(b.attr("aria-pressed"),"true","btn aria-pressed state is true")});QUnit.test("should check for closest matching toggle",function(b){b.expect(12);var e='<div class="btn-group" data-toggle="buttons"><label class="btn btn-primary active"><input type="radio" name="options" id="option1" checked="true"> Option 1</label><label class="btn btn-primary"><input type="radio" name="options" id="option2"> Option 2</label><label class="btn btn-primary"><input type="radio" name="options" id="option3"> Option 3</label></div>';var d=$(e).appendTo("#qunit-fixture");var c=d.children().eq(0);var a=d.children().eq(1);b.ok(c.hasClass("active"),"btn1 has active class");b.ok(c.find("input").prop("checked"),"btn1 is checked");b.ok(!a.hasClass("active"),"btn2 does not have active class");b.ok(!a.find("input").prop("checked"),"btn2 is not checked");a.find("input").trigger("click");b.ok(!c.hasClass("active"),"btn1 does not have active class");b.ok(!c.find("input").prop("checked"),"btn1 is not checked");b.ok(a.hasClass("active"),"btn2 has active class");b.ok(a.find("input").prop("checked"),"btn2 is checked");a.find("input").trigger("click");b.ok(!c.hasClass("active"),"btn1 does not have active class");b.ok(!c.find("input").prop("checked"),"btn1 is not checked");b.ok(a.hasClass("active"),"btn2 has active class");b.ok(a.find("input").prop("checked"),"btn2 is checked")})});