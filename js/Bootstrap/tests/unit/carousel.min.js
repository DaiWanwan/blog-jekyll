$(function(){QUnit.module("carousel plugin");QUnit.test("should be defined on jQuery object",function(a){a.expect(1);a.ok($(document.body).carousel,"carousel method is defined")});QUnit.module("carousel",{beforeEach:function(){$.fn.bootstrapCarousel=$.fn.carousel.noConflict()},afterEach:function(){$.fn.carousel=$.fn.bootstrapCarousel;delete $.fn.bootstrapCarousel}});QUnit.test("should provide no conflict",function(a){a.expect(1);a.strictEqual($.fn.carousel,undefined,"carousel was set back to undefined (orig value)")});QUnit.test("should return jquery collection containing the element",function(a){a.expect(2);var c=$("<div/>");var b=c.bootstrapCarousel();a.ok(b instanceof $,"returns jquery collection");a.strictEqual(b[0],c[0],"collection contains element")});QUnit.test("should not fire slid when slide is prevented",function(b){b.expect(1);var a=b.async();$('<div class="carousel"/>').on("slide.bs.carousel",function(c){c.preventDefault();b.ok(true,"slide event fired");a()}).on("slid.bs.carousel",function(){b.ok(false,"slid event fired")}).bootstrapCarousel("next")});QUnit.test("should reset when slide is prevented",function(b){b.expect(6);var c='<div id="carousel-example-generic" class="carousel slide"><ol class="carousel-indicators"><li data-target="#carousel-example-generic" data-slide-to="0" class="active"/><li data-target="#carousel-example-generic" data-slide-to="1"/><li data-target="#carousel-example-generic" data-slide-to="2"/></ol><div class="carousel-inner"><div class="item active"><div class="carousel-caption"/></div><div class="item"><div class="carousel-caption"/></div><div class="item"><div class="carousel-caption"/></div></div><a class="left carousel-control" href="#carousel-example-generic" data-slide="prev"/><a class="right carousel-control" href="#carousel-example-generic" data-slide="next"/></div>';var d=$(c);var a=b.async();d.one("slide.bs.carousel",function(f){f.preventDefault();setTimeout(function(){b.ok(d.find(".item:eq(0)").is(".active"),"first item still active");b.ok(d.find(".carousel-indicators li:eq(0)").is(".active"),"first indicator still active");d.bootstrapCarousel("next")},0)}).one("slid.bs.carousel",function(){setTimeout(function(){b.ok(!d.find(".item:eq(0)").is(".active"),"first item still active");b.ok(!d.find(".carousel-indicators li:eq(0)").is(".active"),"first indicator still active");b.ok(d.find(".item:eq(1)").is(".active"),"second item active");b.ok(d.find(".carousel-indicators li:eq(1)").is(".active"),"second indicator active");a()},0)}).bootstrapCarousel("next")});QUnit.test("should fire slide event with direction",function(b){b.expect(4);var c='<div id="myCarousel" class="carousel slide"><div class="carousel-inner"><div class="item active"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="item"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>';var d=$(c);var a=b.async();d.one("slide.bs.carousel",function(f){b.ok(f.direction,"direction present on next");b.strictEqual(f.direction,"left","direction is left on next");d.one("slide.bs.carousel",function(g){b.ok(g.direction,"direction present on prev");b.strictEqual(g.direction,"right","direction is right on prev");a()}).bootstrapCarousel("prev")}).bootstrapCarousel("next")});QUnit.test("should fire slid event with direction",function(b){b.expect(4);var c='<div id="myCarousel" class="carousel slide"><div class="carousel-inner"><div class="item active"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="item"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>';var d=$(c);var a=b.async();d.one("slid.bs.carousel",function(f){b.ok(f.direction,"direction present on next");b.strictEqual(f.direction,"left","direction is left on next");d.one("slid.bs.carousel",function(g){b.ok(g.direction,"direction present on prev");b.strictEqual(g.direction,"right","direction is right on prev");a()}).bootstrapCarousel("prev")}).bootstrapCarousel("next")});QUnit.test("should fire slide event with relatedTarget",function(b){b.expect(2);var c='<div id="myCarousel" class="carousel slide"><div class="carousel-inner"><div class="item active"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="item"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>';var a=b.async();$(c).on("slide.bs.carousel",function(d){b.ok(d.relatedTarget,"relatedTarget present");b.ok($(d.relatedTarget).hasClass("item"),'relatedTarget has class "item"');a()}).bootstrapCarousel("next")});QUnit.test("should fire slid event with relatedTarget",function(b){b.expect(2);var c='<div id="myCarousel" class="carousel slide"><div class="carousel-inner"><div class="item active"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="item"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>';var a=b.async();$(c).on("slid.bs.carousel",function(d){b.ok(d.relatedTarget,"relatedTarget present");b.ok($(d.relatedTarget).hasClass("item"),'relatedTarget has class "item"');a()}).bootstrapCarousel("next")});QUnit.test("should set interval from data attribute",function(a){a.expect(4);var c='<div id="myCarousel" class="carousel slide"><div class="carousel-inner"><div class="item active"><img alt=""><div class="carousel-caption"><h4>First Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="item"><img alt=""><div class="carousel-caption"><h4>Second Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div><div class="item"><img alt=""><div class="carousel-caption"><h4>Third Thumbnail label</h4><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p></div></div></div><a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a><a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a></div>';var b=$(c);b.attr("data-interval",1814);b.appendTo("body");$("[data-slide]").first().trigger("click");a.strictEqual(b.data("bs.carousel").options.interval,1814);b.remove();b.appendTo("body").attr("data-modal","foobar");$("[data-slide]").first().trigger("click");a.strictEqual(b.data("bs.carousel").options.interval,1814,"even if there is an data-modal attribute set");b.remove();b.appendTo("body");$("[data-slide]").first().trigger("click");b.attr("data-interval",1860);$("[data-slide]").first().trigger("click");a.strictEqual(b.data("bs.carousel").options.interval,1814,"attributes should be read only on initialization");b.remove();b.attr("data-interval",false);b.appendTo("body");b.bootstrapCarousel(1);a.strictEqual(b.data("bs.carousel").options.interval,false,"data attribute has higher priority than default options");b.remove()});QUnit.test("should skip over non-items when using item indices",function(a){a.expect(2);var c='<div id="myCarousel" class="carousel" data-interval="1814"><div class="carousel-inner"><div class="item active"><img alt=""></div><script type="text/x-metamorph" id="thingy"/><div class="item"><img alt=""></div><div class="item"></div></div></div>';var b=$(c);b.bootstrapCarousel();a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item active");b.bootstrapCarousel(1);a.strictEqual(b.find(".item")[1],b.find(".active")[0],"second item active")});QUnit.test("should skip over non-items when using next/prev methods",function(a){a.expect(2);var c='<div id="myCarousel" class="carousel" data-interval="1814"><div class="carousel-inner"><div class="item active"><img alt=""></div><script type="text/x-metamorph" id="thingy"/><div class="item"><img alt=""></div><div class="item"></div></div></div>';var b=$(c);b.bootstrapCarousel();a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item active");b.bootstrapCarousel("next");a.strictEqual(b.find(".item")[1],b.find(".active")[0],"second item active")});QUnit.test("should go to previous item if left arrow key is pressed",function(a){a.expect(2);var c='<div id="myCarousel" class="carousel" data-interval="false"><div class="carousel-inner"><div id="first" class="item"><img alt=""></div><div id="second" class="item active"><img alt=""></div><div id="third" class="item"><img alt=""></div></div></div>';var b=$(c);b.bootstrapCarousel();a.strictEqual(b.find(".item")[1],b.find(".active")[0],"second item active");b.trigger($.Event("keydown",{which:37}));a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item active")});QUnit.test("should go to next item if right arrow key is pressed",function(a){a.expect(2);var c='<div id="myCarousel" class="carousel" data-interval="false"><div class="carousel-inner"><div id="first" class="item active"><img alt=""></div><div id="second" class="item"><img alt=""></div><div id="third" class="item"><img alt=""></div></div></div>';var b=$(c);b.bootstrapCarousel();a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item active");b.trigger($.Event("keydown",{which:39}));a.strictEqual(b.find(".item")[1],b.find(".active")[0],"second item active")});QUnit.test("should support disabling the keyboard navigation",function(a){a.expect(3);var c='<div id="myCarousel" class="carousel" data-interval="false" data-keyboard="false"><div class="carousel-inner"><div id="first" class="item active"><img alt=""></div><div id="second" class="item"><img alt=""></div><div id="third" class="item"><img alt=""></div></div></div>';var b=$(c);b.bootstrapCarousel();a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item active");b.trigger($.Event("keydown",{which:39}));a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item still active after right arrow press");b.trigger($.Event("keydown",{which:37}));a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item still active after left arrow press")});QUnit.test("should ignore keyboard events within <input>s and <textarea>s",function(a){a.expect(7);var e='<div id="myCarousel" class="carousel" data-interval="false"><div class="carousel-inner"><div id="first" class="item active"><img alt=""><input type="text" id="in-put"><textarea id="text-area"></textarea></div><div id="second" class="item"><img alt=""></div><div id="third" class="item"><img alt=""></div></div></div>';var b=$(e);var d=b.find("#in-put");var c=b.find("#text-area");a.strictEqual(d.length,1,"found <input>");a.strictEqual(c.length,1,"found <textarea>");b.bootstrapCarousel();a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item active");d.trigger($.Event("keydown",{which:39}));a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item still active after right arrow press in <input>");d.trigger($.Event("keydown",{which:37}));a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item still active after left arrow press in <input>");c.trigger($.Event("keydown",{which:39}));a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item still active after right arrow press in <textarea>");c.trigger($.Event("keydown",{which:37}));a.strictEqual(b.find(".item")[0],b.find(".active")[0],"first item still active after left arrow press in <textarea>")});QUnit.test("should only add mouseenter and mouseleave listeners when not on mobile",function(b){b.expect(2);var a="ontouchstart" in document.documentElement;var d='<div id="myCarousel" class="carousel" data-interval="false" data-pause="hover"><div class="carousel-inner"><div id="first" class="item active"><img alt=""></div><div id="second" class="item"><img alt=""></div><div id="third" class="item"><img alt=""></div></div></div>';var c=$(d).bootstrapCarousel();$.each(["mouseover","mouseout"],function(e,f){b.strictEqual(f in $._data(c[0],"events"),!a,"does"+(a?" not":"")+" listen for "+f+" events")})});QUnit.test("should wrap around from end to start when wrap option is true",function(b){b.expect(3);var c='<div id="carousel-example-generic" class="carousel slide" data-wrap="true"><ol class="carousel-indicators"><li data-target="#carousel-example-generic" data-slide-to="0" class="active"/><li data-target="#carousel-example-generic" data-slide-to="1"/><li data-target="#carousel-example-generic" data-slide-to="2"/></ol><div class="carousel-inner"><div class="item active" id="one"><div class="carousel-caption"/></div><div class="item" id="two"><div class="carousel-caption"/></div><div class="item" id="three"><div class="carousel-caption"/></div></div><a class="left carousel-control" href="#carousel-example-generic" data-slide="prev"/><a class="right carousel-control" href="#carousel-example-generic" data-slide="next"/></div>';var d=$(c);var e=function(){return d.find(".item.active").attr("id")};var a=b.async();d.one("slid.bs.carousel",function(){b.strictEqual(e(),"two","carousel slid from 1st to 2nd slide");d.one("slid.bs.carousel",function(){b.strictEqual(e(),"three","carousel slid from 2nd to 3rd slide");d.one("slid.bs.carousel",function(){b.strictEqual(e(),"one","carousel wrapped around and slid from 3rd to 1st slide");a()}).bootstrapCarousel("next")}).bootstrapCarousel("next")}).bootstrapCarousel("next")});QUnit.test("should wrap around from start to end when wrap option is true",function(b){b.expect(1);var c='<div id="carousel-example-generic" class="carousel slide" data-wrap="true"><ol class="carousel-indicators"><li data-target="#carousel-example-generic" data-slide-to="0" class="active"/><li data-target="#carousel-example-generic" data-slide-to="1"/><li data-target="#carousel-example-generic" data-slide-to="2"/></ol><div class="carousel-inner"><div class="item active" id="one"><div class="carousel-caption"/></div><div class="item" id="two"><div class="carousel-caption"/></div><div class="item" id="three"><div class="carousel-caption"/></div></div><a class="left carousel-control" href="#carousel-example-generic" data-slide="prev"/><a class="right carousel-control" href="#carousel-example-generic" data-slide="next"/></div>';var d=$(c);var a=b.async();d.on("slid.bs.carousel",function(){b.strictEqual(d.find(".item.active").attr("id"),"three","carousel wrapped around and slid from 1st to 3rd slide");a()}).bootstrapCarousel("prev")});QUnit.test("should stay at the end when the next method is called and wrap is false",function(b){b.expect(3);var c='<div id="carousel-example-generic" class="carousel slide" data-wrap="false"><ol class="carousel-indicators"><li data-target="#carousel-example-generic" data-slide-to="0" class="active"/><li data-target="#carousel-example-generic" data-slide-to="1"/><li data-target="#carousel-example-generic" data-slide-to="2"/></ol><div class="carousel-inner"><div class="item active" id="one"><div class="carousel-caption"/></div><div class="item" id="two"><div class="carousel-caption"/></div><div class="item" id="three"><div class="carousel-caption"/></div></div><a class="left carousel-control" href="#carousel-example-generic" data-slide="prev"/><a class="right carousel-control" href="#carousel-example-generic" data-slide="next"/></div>';var d=$(c);var e=function(){return d.find(".item.active").attr("id")};var a=b.async();d.one("slid.bs.carousel",function(){b.strictEqual(e(),"two","carousel slid from 1st to 2nd slide");d.one("slid.bs.carousel",function(){b.strictEqual(e(),"three","carousel slid from 2nd to 3rd slide");d.one("slid.bs.carousel",function(){b.ok(false,"carousel slid when it should not have slid")}).bootstrapCarousel("next");b.strictEqual(e(),"three","carousel did not wrap around and stayed on 3rd slide");a()}).bootstrapCarousel("next")}).bootstrapCarousel("next")});QUnit.test("should stay at the start when the prev method is called and wrap is false",function(a){a.expect(1);var b='<div id="carousel-example-generic" class="carousel slide" data-wrap="false"><ol class="carousel-indicators"><li data-target="#carousel-example-generic" data-slide-to="0" class="active"/><li data-target="#carousel-example-generic" data-slide-to="1"/><li data-target="#carousel-example-generic" data-slide-to="2"/></ol><div class="carousel-inner"><div class="item active" id="one"><div class="carousel-caption"/></div><div class="item" id="two"><div class="carousel-caption"/></div><div class="item" id="three"><div class="carousel-caption"/></div></div><a class="left carousel-control" href="#carousel-example-generic" data-slide="prev"/><a class="right carousel-control" href="#carousel-example-generic" data-slide="next"/></div>';var c=$(b);c.on("slid.bs.carousel",function(){a.ok(false,"carousel slid when it should not have slid")}).bootstrapCarousel("prev");a.strictEqual(c.find(".item.active").attr("id"),"one","carousel did not wrap around and stayed on 1st slide")})});