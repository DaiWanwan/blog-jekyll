$(function(){QUnit.module("collapse plugin");QUnit.test("should be defined on jquery object",function(a){a.expect(1);a.ok($(document.body).collapse,"collapse method is defined")});QUnit.module("collapse",{beforeEach:function(){$.fn.bootstrapCollapse=$.fn.collapse.noConflict()},afterEach:function(){$.fn.collapse=$.fn.bootstrapCollapse;delete $.fn.bootstrapCollapse}});QUnit.test("should provide no conflict",function(a){a.expect(1);a.strictEqual($.fn.collapse,undefined,"collapse was set back to undefined (org value)")});QUnit.test("should return jquery collection containing the element",function(a){a.expect(2);var b=$("<div/>");var c=b.bootstrapCollapse();a.ok(c instanceof $,"returns jquery collection");a.strictEqual(c[0],b[0],"collection contains element")});QUnit.test("should show a collapsed element",function(a){a.expect(2);var b=$('<div class="collapse"/>').bootstrapCollapse("show");a.ok(b.hasClass("in"),'has class "in"');a.ok(!/height/i.test(b.attr("style")),"has height reset")});QUnit.test("should hide a collapsed element",function(a){a.expect(1);var b=$('<div class="collapse"/>').bootstrapCollapse("hide");a.ok(!b.hasClass("in"),'does not have class "in"')});QUnit.test("should not fire shown when show is prevented",function(b){b.expect(1);var a=b.async();$('<div class="collapse"/>').on("show.bs.collapse",function(c){c.preventDefault();b.ok(true,"show event fired");a()}).on("shown.bs.collapse",function(){b.ok(false,"shown event fired")}).bootstrapCollapse("show")});QUnit.test("should reset style to auto after finishing opening collapse",function(b){b.expect(2);var a=b.async();$('<div class="collapse" style="height: 0px"/>').on("show.bs.collapse",function(){b.strictEqual(this.style.height,"0px","height is 0px")}).on("shown.bs.collapse",function(){b.strictEqual(this.style.height,"","height is auto");a()}).bootstrapCollapse("show")});QUnit.test('should remove "collapsed" class from target when collapse is shown',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",function(){c.ok(!a.hasClass("collapsed"),"target does not have collapsed class");b()});a.trigger("click")});QUnit.test('should add "collapsed" class to target when collapse is hidden',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1" class="in"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",function(){c.ok(a.hasClass("collapsed"),"target has collapsed class");b()});a.trigger("click")});QUnit.test('should remove "collapsed" class from all triggers targeting the collapse when the collapse is shown',function(c){c.expect(2);var b=c.async();var a=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture");var d=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",function(){c.ok(!a.hasClass("collapsed"),"target trigger does not have collapsed class");c.ok(!d.hasClass("collapsed"),"alt trigger does not have collapsed class");b()});a.trigger("click")});QUnit.test('should add "collapsed" class to all triggers targeting the collapse when the collapse is hidden',function(c){c.expect(2);var b=c.async();var a=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");var d=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1" class="in"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",function(){c.ok(a.hasClass("collapsed"),"target has collapsed class");c.ok(d.hasClass("collapsed"),"alt trigger has collapsed class");b()});a.trigger("click")});QUnit.test('should not close a collapse when initialized with "show" option if already shown',function(b){b.expect(0);var a=b.async();var c=$('<div id="test1" class="in"/>').appendTo("#qunit-fixture").on("hide.bs.collapse",function(){b.ok(false)});c.bootstrapCollapse("show");setTimeout(a,0)});QUnit.test('should open a collapse when initialized with "show" option if not already shown',function(b){b.expect(1);var a=b.async();var c=$('<div id="test1" />').appendTo("#qunit-fixture").on("show.bs.collapse",function(){b.ok(true)});c.bootstrapCollapse("show");setTimeout(a,0)});QUnit.test('should not show a collapse when initialized with "hide" option if already hidden',function(b){b.expect(0);var a=b.async();$('<div class="collapse"></div>').appendTo("#qunit-fixture").on("show.bs.collapse",function(){b.ok(false,'showing a previously-uninitialized hidden collapse when the "hide" method is called')}).bootstrapCollapse("hide");setTimeout(a,0)});QUnit.test('should hide a collapse when initialized with "hide" option if not already hidden',function(b){b.expect(1);var a=b.async();$('<div class="collapse in"></div>').appendTo("#qunit-fixture").on("hide.bs.collapse",function(){b.ok(true,'hiding a previously-uninitialized shown collapse when the "hide" method is called')}).bootstrapCollapse("hide");setTimeout(a,0)});QUnit.test('should remove "collapsed" class from active accordion target',function(b){b.expect(3);var a=b.async();var g='<div class="panel-group" id="accordion"><div class="panel"/><div class="panel"/><div class="panel"/></div>';var c=$(g).appendTo("#qunit-fixture").find(".panel");var f=$('<a role="button" data-toggle="collapse" href="#body1" data-parent="#accordion"/>').appendTo(c.eq(0));$('<div id="body1" class="in"/>').appendTo(c.eq(0));var e=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body2" data-parent="#accordion"/>').appendTo(c.eq(1));$('<div id="body2"/>').appendTo(c.eq(1));var d=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body3" data-parent="#accordion"/>').appendTo(c.eq(2));$('<div id="body3"/>').appendTo(c.eq(2)).on("shown.bs.collapse",function(){b.ok(f.hasClass("collapsed"),'inactive target 1 does have class "collapsed"');b.ok(e.hasClass("collapsed"),'inactive target 2 does have class "collapsed"');b.ok(!d.hasClass("collapsed"),'active target 3 does not have class "collapsed"');a()});d.trigger("click")});QUnit.test("should allow dots in data-parent",function(b){b.expect(3);var a=b.async();var g='<div class="panel-group accordion"><div class="panel"/><div class="panel"/><div class="panel"/></div>';var c=$(g).appendTo("#qunit-fixture").find(".panel");var f=$('<a role="button" data-toggle="collapse" href="#body1" data-parent=".accordion"/>').appendTo(c.eq(0));$('<div id="body1" class="in"/>').appendTo(c.eq(0));var e=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body2" data-parent=".accordion"/>').appendTo(c.eq(1));$('<div id="body2"/>').appendTo(c.eq(1));var d=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body3" data-parent=".accordion"/>').appendTo(c.eq(2));$('<div id="body3"/>').appendTo(c.eq(2)).on("shown.bs.collapse",function(){b.ok(f.hasClass("collapsed"),'inactive target 1 does have class "collapsed"');b.ok(e.hasClass("collapsed"),'inactive target 2 does have class "collapsed"');b.ok(!d.hasClass("collapsed"),'active target 3 does not have class "collapsed"');a()});d.trigger("click")});QUnit.test('should set aria-expanded="true" on target when collapse is shown',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1" aria-expanded="false"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",function(){c.strictEqual(a.attr("aria-expanded"),"true",'aria-expanded on target is "true"');b()});a.trigger("click")});QUnit.test('should set aria-expanded="false" on target when collapse is hidden',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" href="#test1" aria-expanded="true"/>').appendTo("#qunit-fixture");$('<div id="test1" class="in"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",function(){c.strictEqual(a.attr("aria-expanded"),"false",'aria-expanded on target is "false"');b()});a.trigger("click")});QUnit.test('should set aria-expanded="true" on all triggers targeting the collapse when the collapse is shown',function(c){c.expect(2);var b=c.async();var a=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1" aria-expanded="false"/>').appendTo("#qunit-fixture");var d=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1" aria-expanded="false"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",function(){c.strictEqual(a.attr("aria-expanded"),"true",'aria-expanded on target is "true"');c.strictEqual(d.attr("aria-expanded"),"true",'aria-expanded on alt is "true"');b()});a.trigger("click")});QUnit.test('should set aria-expanded="false" on all triggers targeting the collapse when the collapse is hidden',function(c){c.expect(2);var b=c.async();var a=$('<a role="button" data-toggle="collapse" href="#test1" aria-expanded="true"/>').appendTo("#qunit-fixture");var d=$('<a role="button" data-toggle="collapse" href="#test1" aria-expanded="true"/>').appendTo("#qunit-fixture");$('<div id="test1" class="in"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",function(){c.strictEqual(a.attr("aria-expanded"),"false",'aria-expanded on target is "false"');c.strictEqual(d.attr("aria-expanded"),"false",'aria-expanded on alt is "false"');b()});a.trigger("click")});QUnit.test('should change aria-expanded from active accordion target to "false" and set the newly active one to "true"',function(b){b.expect(3);var a=b.async();var g='<div class="panel-group" id="accordion"><div class="panel"/><div class="panel"/><div class="panel"/></div>';var c=$(g).appendTo("#qunit-fixture").find(".panel");var f=$('<a role="button" data-toggle="collapse" href="#body1" data-parent="#accordion"/>').appendTo(c.eq(0));$('<div id="body1" aria-expanded="true" class="in"/>').appendTo(c.eq(0));var e=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body2" data-parent="#accordion"/>').appendTo(c.eq(1));$('<div id="body2" aria-expanded="false"/>').appendTo(c.eq(1));var d=$('<a class="collapsed" data-toggle="collapse" role="button" href="#body3" data-parent="#accordion"/>').appendTo(c.eq(2));$('<div id="body3" aria-expanded="false"/>').appendTo(c.eq(2)).on("shown.bs.collapse",function(){b.strictEqual(f.attr("aria-expanded"),"false",'inactive target 1 has aria-expanded="false"');b.strictEqual(e.attr("aria-expanded"),"false",'inactive target 2 has aria-expanded="false"');b.strictEqual(d.attr("aria-expanded"),"true",'active target 3 has aria-expanded="false"');a()});d.trigger("click")});QUnit.test("should not fire show event if show is prevented because other element is still transitioning",function(b){b.expect(1);var a=b.async();var h='<div id="accordion"><div class="panel"/><div class="panel"/></div>';var d=false;var c=$(h).appendTo("#qunit-fixture").find(".panel");var f=$('<a role="button" data-toggle="collapse" href="#body1" data-parent="#accordion"/>').appendTo(c.eq(0));$('<div id="body1" class="collapse"/>').appendTo(c.eq(0)).on("show.bs.collapse",function(){d=true});var e=$('<a role="button" data-toggle="collapse" href="#body2" data-parent="#accordion"/>').appendTo(c.eq(1));var g=$('<div id="body2" class="collapse"/>').appendTo(c.eq(1));e.trigger("click");g.toggleClass("in collapsing").data("bs.collapse").transitioning=1;f.trigger("click");setTimeout(function(){b.ok(!d,"show event did not fire");a()},1)});QUnit.test('should add "collapsed" class to target when collapse is hidden via manual invocation',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1" class="in"/>').appendTo("#qunit-fixture").on("hidden.bs.collapse",function(){c.ok(a.hasClass("collapsed"));b()}).bootstrapCollapse("hide")});QUnit.test('should remove "collapsed" class from target when collapse is shown via manual invocation',function(c){c.expect(1);var b=c.async();var a=$('<a role="button" data-toggle="collapse" class="collapsed" href="#test1"/>').appendTo("#qunit-fixture");$('<div id="test1"/>').appendTo("#qunit-fixture").on("shown.bs.collapse",function(){c.ok(!a.hasClass("collapsed"));b()}).bootstrapCollapse("show")})});